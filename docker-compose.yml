services:
    mongodb1:
        image: arm64v8/mongo:6.0.23-jammy
        platform: linux/arm64/v8
        container_name: mongodb1
        command: --replSet myRepl --keyFile /keys/mongodb-keyfile
        ports:
            - '27017:27017'
        volumes:
            - ./dockers/data/mongodb1:/data/db
            - keys:/keys
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: 1234
            MONGO_INITDB_DATABASE: maple-story
        depends_on:
            - key-gen
        restart: always
        networks:
            - maplestory

    mongodb2:
        image: arm64v8/mongo:6.0.23-jammy
        platform: linux/arm64/v8
        container_name: mongodb2
        command: --replSet myRepl --keyFile /keys/mongodb-keyfile
        ports:
            - '27018:27017'
        volumes:
            - ./dockers/data/mongodb2:/data/db
            - keys:/keys
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: 1234
            MONGO_INITDB_DATABASE: maple-story
        depends_on:
            - key-gen
        restart: always
        networks:
            - maplestory

    mongodb3:
        image: arm64v8/mongo:6.0.23-jammy
        platform: linux/arm64/v8
        container_name: mongodb3
        command: --replSet myRepl --keyFile /keys/mongodb-keyfile
        ports:
            - '27019:27017'
        volumes:
            - ./dockers/data/mongodb3:/data/db
            - keys:/keys
        environment:
            MONGO_INITDB_ROOT_USERNAME: admin
            MONGO_INITDB_ROOT_PASSWORD: 1234
            MONGO_INITDB_DATABASE: maple-story
        depends_on:
            - key-gen
        restart: always
        networks:
            - maplestory
    key-gen:
        build: ./dockers/mongodb-replica/key
        volumes:
            - keys:/keys
        restart: 'no'

    init-replica:
        build: ./dockers/mongodb-replica/init
        depends_on:
            - mongodb1
            - mongodb2
            - mongodb3
        networks:
            - maplestory
        restart: 'no'

    auth:
        build:
            context: .
            dockerfile: ./dockers/_auth.Dockerfile
            target: runner
        container_name: auth_server
        working_dir: /runner
        command: yarn dev:auth
        ports:
            - "3001:3001"
        depends_on:
            - mongodb1
            - mongodb2
            - mongodb3
        networks:
            - maplestory
        restart: always

    event:
        build:
            context: .
            dockerfile: ./dockers/_event.Dockerfile
            target: runner
        container_name: event_server
        working_dir: /runner
        command: yarn dev:event
        ports:
            - "3002:3002"
        depends_on:
            - mongodb1
            - mongodb2
            - mongodb3
        networks:
            - maplestory
        restart: always

    gateway:
        build:
            context: .
            dockerfile: ./dockers/_gateway.Dockerfile
            target: runner
        container_name: gateway_server
        working_dir: /runner
        command: yarn dev:gateway
        ports:
            - "3000:3000"
        depends_on:
            - mongodb1
            - mongodb2
            - mongodb3
        networks:
            - maplestory
        restart: always

volumes:
    keys:

networks:
    maplestory:
        external: true
